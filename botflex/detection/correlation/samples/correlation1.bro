##! This script correlates various events generated by other botflex
##! scripts and decides whether a given host is a bot or not

## We receive here the following streams at the moment:
## <group: Inbound scan>
## SCAN_IP_IB
## SCAN_IP_IB_CRITICAL
## SCAN_PORT_IB
## SCAN_PORT_IB_CRITICAL 

## <group: Exploit>
## EXPLOIT_BREAKIN	
## EXPLOIT_BLACKLIST_MATCH

## <group: Egg download>
## EGG_BLACKLIST_MATCH
## EGG_DISGUISED_EXE

## <group: C&C communication>
## CNC_DNS_HIGH_FAILURE
## CNC_BLACKLIST_MATCH
## CNC_RBN_BLACKLIST_MATCH
## CNC_BLACKLIST_MATCH_DNS
## CNC_SIG_MATCH_CONFICKER
## CNC_SIG_MATCH_BOBAX

## <group: Attack>
## sub-group: Outbound scan
##	 ATTACK_SCAN_IP_OB
##	 ATTACK_SCAN_IP_OB_CRITICAL
##	 ATTACK_SCAN_PORT_OB
##	 ATTACK_SCAN_PORT_OB_CRITICAL
## sub-group: Spam
##	ATTACK_SPAM_HIGH_SMTP
##	ATTACK_SPAM_MX
## sub-group: Sql injection
##	ATTACK_SQLI


@load correlation/correlation.bro
@load correlation/non-cluster.bro

module Correlation;


global corr_id = "dns_failure";
global filter_v_rule = "v_rule";
global filter_v_rule2 = "v_rule2";

event bro_init()
	{
	local done = F;

	local v_rule = "; ;{ n$DNS_FAILURE>0 ) }";
	
	done = Correlation::add_correlation_item(corr_id, [$name=filter_v_rule,
	                                       $every=1min,
					       $rule=v_rule,
	                                       #$correlated=bot_found,
					       $alt_name_in_history = T,
					       $filter_type="vertical"]); 

	if ( !done )
		print "Correlation Framework Error: Failed to add filter v_rule.";
	
	}


	



## Handling the default dns_message event to detect dns NXDOMAIN replies
event dns_message(c: connection, is_orig: bool, msg: dns_msg, len: count)
	{
	local id = c$id;
	local outbound = Site::is_local_addr(id$orig_h);

	if(c?$dns)
		{
		if ( c$dns?$rcode_name && c$dns?$qtype_name  )
			{
			if ( c$dns$rcode_name=="NXDOMAIN" && (c$dns$qtype_name=="A" || c$dns$qtype_name=="AAAA") && outbound && c$dns?$query )
				{
				local src_ip = c$id$orig_h;
				local my_index: Correlation::Index;
				my_index = [$host=src_ip];

				local v_stream: Correlation::Stream;
				local stream_name = "DNS_FAILURE";

				v_stream = [ $name=stream_name, $alt_name=stream_name, $weight=0.5 ];

				Correlation::add_stream( corr_id, filter_v_rule, my_index, v_stream );
				}
			}
		}
	}

